树的总结
1）树的基本属性
根   直径   深度  重心
2）二叉树
堆（优先队列）
3）二叉搜索树-》 二叉平衡树（伸展树）
4）基环树（n个节点n条边）
实际为只有一个环的图
可以看为环为根的树，并采取叶子与根分治的方法解决
类型  无向图
      有向图  1）内向基环树   特点：每个节点有且仅有一个出度
              2）外向基环树   特点：每个节点有且仅有一个入度
找环的方法
1）Tarin算法 但不推荐，因为只有一个环，不存在多重环，无需太复杂
2）拓扑排序（有向图），最后还有出度/入度的就是环上的点
3）v[]数组+栈   找到重复访问的节点开始回退到该节点，回退过程中的点就是环上的点
例题 CF913-G 开灯

6）树上数据结构
      1）点分治
      用于统计树上路径问题，问题特点：一般是对整棵树统计特定路径的贡献，
      例如 龙树 数据结构专题，距离小于K的路径
      2）点分树
      同样是路径问题，问题一般要求针对某个点，求特定答案，
      思路是点分治中预处理数据，通过子树和祖先统计答案
      3）树上启发式合并
      重链剖分后，记录重儿子，先走轻儿子，再走重儿子，走完重儿子，贡献数组不清空，记录对根节点的贡献，在遍历一般请儿子，
      复杂度OlogO,一般用于处理书上问题，不局限于路径问题，子树问题也可以，例如洛谷占统治地位的颜色
