背包问题
1） 01背包 ，每个物品只有两种情况（选与不选），复杂度时间 o（物品个数*背包容量，有顺序）
例如必备073第三题（加减集合得到目标数），将问题转化为背包
第四题，半数接近问题（布尔背包）
2）有依赖的背包，物品之间不严格独立，有可能只能二选一 都不选，这种情况可以先进行分组，一个物品与他关联的物品一组，只展开每个组的一个元素
在展开一个元素时遍历组中所有元素的展开情况（一般情况数有限）
例如第五题（主件与附件）
3）非负数组前k个累加和数组
4）分组背包 每组选一个
按组别排序，在组内遍历可能性，复杂度与01背包相同
//start end term
5）完全背包，每个物品可以无限选
  方法为 先从上一个物品递归为不选的情况，再dp[i][j]=max(dp[i][j],dp[i][j-c]+v);
这里用的是第i层的结果（因为不限数量，可以选就决定一次）；
正则完全匹配问题，074第四题
